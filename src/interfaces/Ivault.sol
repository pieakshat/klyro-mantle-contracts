// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;


interface IVault {
    // ───────────── Config / getters ─────────────
    function USDT() external view returns (address);
    function manager() external view returns (address);
    function reserveBps() external view returns (uint256);

    // ───────────── Shares accounting ────────────
    function totalShares() external view returns (uint256);
    function shares(address account) external view returns (uint256);

    // ───────────── Adapters registry ────────────
    /// @notice Public array getter autogenerated by Solidity
    function adapters(uint256 index) external view returns (address);
    /// @notice Helper you added to get the array length
    function adaptersLength() external view returns (uint256);
    function isAdapter(address adapter) external view returns (bool);

    // ───────────── Views ────────────────────────
    function totalAssets() external view returns (uint256);
    function convertToShares(uint256 assets) external view returns (uint256);
    function convertToAssets(uint256 shares) external view returns (uint256);
    function idleTarget() external view returns (uint256);

    // ───────────── Manager actions ──────────────
    function setManager(address _m) external;
    function setAdapter(address adapter, bool allowed) external;
    function setReserveBps(uint256 bps) external;
    function pushToAdapter(address adapter, uint256 amount) external;
    function pullFromAdapter(address adapter, uint256 amount) external;

    // ───────────── User actions ─────────────────
    function deposit(uint256 assets) external;
    function withdraw(uint256 sharesToBurn) external;
}
